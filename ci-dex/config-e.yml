# review-epubmaker向けの設定ファイルの例。
# yamlファイルをRe:VIEWファイルのある場所に置き、
# 「review-epubmaker yamlファイル」を実行すると、<bookname>.epubファイルが
# 生成されます。
# このファイルはUTF-8エンコーディングで記述してください。

# この設定ファイルでサポートするRe:VIEWのバージョン番号。
# major versionが違うときにはエラーを出す。
review_version: 2.0

# ほかの設定ファイルの継承を指定できる。同じパラメータに異なる値がある場合は、
# 呼び出し元の値が優先される。
# A.yml、B.ymlのパラメータを継承する例。A.ymlとB.ymlに同じパラメータがある
# 場合、B.ymlの値が優先される。さらに今このファイルに同じパラメータがあるなら、
# その値がB.ymlよりも優先される。
# 同様にA.yml、B.yml内でさらにinherit:パラメータを使うこともできる。
# inherit: ["A.yml", "B.yml"]
inherit: ["config-base.yml", "config-starter.yml", "config-starter-e.yml"]

# 以下はオプション
# 以下はオプション(autと同じように配列書式で複数指定可能)。
# 読みの指定はaut:の例を参照。
# a-が付いているものはcreator側、
# 付いていないものはcontributor側(二次協力者)に入る
# a-adp, adp: 異なるメディア向けに作り直した者
# a-ann, ann: 注釈記述者
# a-arr, arr: アレンジした者
# a-art, art: グラフィックデザインおよび芸術家
# a-asn, asn: 関連・かつての所有者・関係者
# a-aqt, aqt: 大きく引用された人物
# a-aft, aft: 後書き・奥付の責任者
# a-aui, aui: 序論・序文・前書きの責任者
# a-ant, ant: 目録責任者
# a-bkp, bkp: メディア制作責任者
# a-clb, clb: 限定参加または補足者
# a-cmm, cmm: 解釈・分析・考察者
# a-csl, csl: 監修者
# a-dsr, dsr: デザイナ
# a-edt, edt: 編集者
# a-ill, ill: イラストレータ
# a-lyr, lyr: 歌詞作成者
# a-mdc, mdc: メタデータセットの一次的責任者
# a-mus, mus: 音楽家
# a-nrt, nrt: 語り手
# a-oth, oth: その他
# a-pht, pht: 撮影責任者
# a-pbl, pbl: 出版社（発行所）
# a-prt, prt: 印刷所
# a-red, red: 項目の枠組起草者
# a-rev, rev: 評論者
# a-spn, spn: 援助者
# a-ths, ths: 監督者
# a-trc, trc: 筆記・タイプ作業者
# a-trl, trl: 翻訳者

# カタログファイル名を指定する
catalogfile: catalog-e.yml

# reファイルを格納するディレクトリ。デフォルト値は null。
# 値にたとえば「contents」を指定すると、reファイルはすべて「contents」
# ディレクトリに置かなければならず、カレントディレクトリには一切置いては
# ならない。
# contentdir: null
contentdir: contents

# 表紙にするHTMLファイル。ファイル名を指定すると表紙として入る
# cover: null
#
# 表紙に配置し、書籍の影絵にも利用する画像ファイル。省略した場合はnull (画像を使わない)。画像ディレクトリ内に置いてもディレクトリ名は不要(例: cover.jpg)
# coverimage: cover4.jpg
#
# 表紙の後に大扉ページを作成するか。省略した場合はtrue (作成する)
titlepage: true
#
# 自動生成される大扉ページを上書きするファイル。ファイル名を指定すると大扉として入る (PDFMaker向けにはLaTeXソース断片、EPUBMaker向けにはHTMLファイル)
# titlefile: null
#
# 原書大扉ページにするHTMLファイル。ファイル名を指定すると原書大扉として入る (PDFMaker向けにはLaTeXソース断片、EPUBMaker向けにはHTMLファイル)
# originaltitlefile: null
#
# 権利表記ページファイル。ファイル名を指定すると権利表記として入る (PDFMaker向けにはLaTeXソース断片、EPUBMaker向けにはHTMLファイル)
# creditfile: null

# 奥付を作成するか。デフォルトでは作成されない。trueを指定するとデフォルトの奥付、ファイル名を指定するとそれがcolophon.htmlとしてコピーされる
# colophon: null

# 裏表紙データファイル (PDFMaker向けにはLaTeXソース断片、EPUBMaker向けにはHTMLファイル)
# backcover: null

# プロフィールページファイル  (PDFMaker向けにはLaTeXソース断片、EPUBMaker向けにはHTMLファイル)。ファイル名を指定すると著者紹介として入る
# profile: null

# プロフィールページの目次上の見出し
# profiletitle: 著者紹介

# 広告ファイル。ファイル名を指定すると広告として入る (PDFMaker向けにはLaTeXソース断片、EPUBMaker向けにはHTMLファイル)
# advfile: null

# カタログファイル名を指定する
# catalogfile: catalog.yml

# EPUBのOPFへの固有の追加ルール
# <package>要素に追加する名前空間
# opf_prefix: {ebpaj: "http://www.ebpaj.jp/"}
# 追加する<meta>要素のプロパティとその値
# opf_meta: {"ebpaj:guide-version": "1.1.3"}

# 以下のパラメータを有効にするときには、
# epubmaker:
#    パラメータ: 値
#    パラメータ: 値
#   ...
# という構成にする必要がある(インデントさせる)

epubmaker:
  # HTMLファイルの拡張子
  htmlext: xhtml
  #
  # 目次を要素の階層表現にしない。省略した場合(null)は階層化する。
  # 特に部扉が入るなどの理由で、構成によっては階層化目次でepubcheckに
  # パスしない目次ができるが、そのようなときにはこれをtrueにする
  # flattoc: null
  #
  # 目次のインデントレベルをスペース文字で表現する(flattocがtrueのときのみ)
  # flattocindent: true
  #
  # NCX目次の見出しレベルごとの飾り(配列で設定)。EPUB3ではNCXは作られない
  # ncxindent:
  #-
  #- -
  # フックは、各段階で介入したいときのプログラムを指定する。自動で適切な引数が渡される
  # プログラムには実行権限が必要
  # ファイル変換処理の前に実行するプログラム。スタイルシートのコンパイルをしたいときなどに利用する。
  # 渡される引数1=作業用展開ディレクトリ
  # hook_beforeprocess: null
  #
  # 前付の作成後に実行するプログラム。作業用展開ディレクトリにある目次ファイル(toc-html.txt)を操作したいときなどに利用する。
  # 渡される引数1=作業用展開ディレクトリ
  # hook_afterfrontmatter: null
  #
  # 本文の変換後に実行するプログラム。作業用展開ディレクトリにある目次ファイル(toc-html.txt)を操作したいときなどに利用する。
  # 渡される引数1=作業用展開ディレクトリ
  # hook_afterbody: null
  #
  # 後付の作成後に実行するプログラム。作業用展開ディレクトリにある目次ファイル(toc-html.txt)を操作したいときなどに利用する。
  # 渡される引数1=作業用展開ディレクトリ
  # hook_afterbackmatter: null
  #
  # 画像およびフォントをコピーした後に実行するプログラム。別の画像やフォントを追加したいときなどに利用する。
  # 渡される引数1=作業用展開ディレクトリ
  # hook_aftercopyimage: null
  #
  # ePUB zipアーカイブ直前に実行するプログラム。メタ情報などを加工したいときなどに利用する。
  # 渡される引数1=ePUB準備ディレクトリ
  # hook_prepack: null
  #
  # 変換したHTMLファイルおよびCSSを解析して厳密に使用している画像ファイルだけを取り込むか。デフォルトはnull(imagesディレクトリすべてを取り込む)
  # なお、フォント、カバー、広告についてはこの設定によらずディレクトリ内のものがすべて取り込まれる
  # verify_target_images: null
  #
  # verify_target_imagesがtrueの状態において、解析で発見されなくても強制的に取り込むファイルの相対パスの配列
  # force_include_images: []
  #
  # 画像ファイルの縦x横の最大ピクセル数許容値
  # image_maxpixels: 4000000
  #
  # Re:VIEWファイル名を使わず、前付にpre01,pre02...、本文にchap01,chap02l...、後付にpost01,post02...という名前付けルールにするか
  # rename_for_legacy: null
  #
  # ePUBアーカイブの非圧縮実行
  # zip_stage1: "zip -0Xq"
  #
  # ePUBアーカイブの圧縮実行
  # zip_stage2: "zip -Xr9Dq"
  #
  # ePUBアーカイブに追加するパス(デフォルトはmimetype、META-INF、OEBPS)
  # zip_addpath: null
  #
  # EPUBで表紙をコンテンツに含めるか。デフォルトでは作成されない。yesにするとiBooks等でも最初に表紙が表示されるようになる
  # cover_linear: null
  #
  # @<href>タグでの外部リンクを禁止し、地の文にする(falseで禁止する)
  # externallink: true
  #
  # epubmaker:階層を使うものはここまで

# 以下のパラメータを有効にするときには、
# pdfmaker:
#    パラメータ: 値
#    パラメータ: 値
#   ...
# という構成にする必要がある(インデントさせる)
#
pdfmaker:
  #
  # TeXコンパイル前に実行するプログラム。変換後のTeXソースを調整したいときに使用する。
  # 渡される引数1=作業用展開ディレクトリ、引数2=呼び出しを実行したディレクトリ
  # hook_beforetexcompile: null
  hook_beforetexcompile: [lib/hooks/beforetexcompile.rb]
  #
  # TeXコンパイル後に実行するプログラム。索引作業をして再度コンパイルしたいときなどに使用する。
  # 渡される引数1=作業用展開ディレクトリ、引数2=呼び出しを実行したディレクトリ
  # hook_aftertexcompile: null
  #
  # PDF(book.pdf)作成後に実行するプログラム。PDFに加工を施したいときに使用する。
  # 渡される引数1=作業用展開ディレクトリ、引数2=呼び出しを実行したディレクトリ
  # hook_afterdvipdf: null
  #
  # 画像のscale=X.Xという指定を画像拡大縮小率からページ最大幅の相対倍率に変換します。
  # image_scale2width: true
  #
  # 奥付を作成するか。trueを指定するとデフォルトの奥付、ファイル名を指定するとそれがcolophon.htmlとしてコピーされる
  colophon: true
  #
  # 表紙に配置し、書籍の影絵にも利用する画像ファイル。同人誌の印刷では一般的に、表紙は本文と別ファイルにするので、ここはnullにする。
  # coverimage: cover4.jpg

  # 表紙ページの挿入 for Starter
  # coverimage: null
  ### Starterでは、表紙をPDFで用意してください
  # coverpdf_files: [cover.pdf]  # PDFファイル名（複数可）
  # coverpdf_option: "offset=-0.23cm 0.23cm" # 必要に応じて調整
  coverpdf_files: [cover-e.pdf, cover4-e.pdf]  # PDFファイル名（複数可）

  #
  # pdfmaker:階層を使うものはここまで
